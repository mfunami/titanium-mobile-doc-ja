#summary iPhoneのUI構造
#labels about,ui
= iPhoneのUI構造 =

Titanium Mobileはイメージ的にObjective-Cへのプリプロセッサとして動きます。オブジェクトの作成や解放、各種オブジェクトの抽象化(iPhone/Android間)したところで、実際のUI構造までは抽象化できません。親亀を作って、その上に子亀を載せるということをする必要があるわけです。

そんなわけでObjective-Cによる一般的なiPhoneアプリ開発をかじったことがある方にはすでに分かりきったこととなりますが、iPhoneのUI構造についてまずご説明したいと思います。

== 部品の名前と役割(概要) ==
構造云々
それぞれの部品をなんというかというところについては次の画像を見ていただくのが一番早いと思います。

http://img.skitch.com/20090707-eq7pganihxiidf7n3ysxx25j3c.jpg

=== 画面を構成する表示領域 ===
||Window||すべてのUI部品やViewを格納する親オブジェクト||
||View||コンテンツ表示部の総称。いろいろな種類がある。後述するBarも一種のView。||
||Status Bar||デバイスの表示部最上方にある表示領域||
||Nav Bar||Status Barの直下にある表示領域||
||Toolbar||画面下部に配置される表示領域||
||Tab Bar||最下部に配置される特殊な表示領域。複数のWindowを切り替える操作をする機能を持つ||

表示部には次のような階層構造になってると考えれば（オブジェクトアクセス的にも）いいでしょう。

 * Application全体(tiapp.xml含む)
  ** Window[s]
   *** Status Bar
   *** Nav Bar
    **** Control[s]
   *** View[s]
    **** View[s]/Control[s]...
   *** Toolbar
    **** Control[s]
  ** TabBar

=== Viewの種類 ===

おおまかに言うと次のような感じのものがTitanium Mobileではサポートされています。
今後さらに増えていく可能性がもちろんあります。

||WebView||HTML部品を表示するためのView。NativeUIを使わずにHTML+Javascript+CSSでアプリケーションを開発する場合でもこのViewが配置されている寸法になります。||
||TableView||縦１列にデータが並んでいる形式です。Safariのブックマークなどが代表になるでしょうか。||
||Grouped VIew||複数のセクション（Option Section[s] 入力であったり、ボタンであったり、候補選択であったり）を抱えるView。「設定」アプリケーションの動きがまさにこれになります。||
||ImageView||画像表示を行うためのView。CoverflowのためにはCoverFlowViewという別のものがあります。||
||MapView||地図表示を行うためのView。「マップ」アプリケーションの地図表示部を想像すればいいかと。||
||ScrollableView||**後で書く**||

=== Controlの種類 ===
ViewやNav Bar, ToolBarにはボタンなどの表示部品を格納させることができます。

||TextField||一行入力のテキストボックス。非常にオプションが多いです。||
||TextArea||複数行入力可能なテキスト入力部品。微妙にViewに片足を突っ込んでいるような？||
||Slider||アナログに数値を入力するための部品。サイズやボリューム調整などに利用します。||
||Button Bar||複数のボタンを並列表示させる方式。||
||Tabbed Bar||複数のボタンを並列表示させ、そこから選択する方式。||
||Switch||オンオフ制御するための部品||
||Button||ボタン。いろんなところで出番があります。||

以上のそれぞれについては個別に解説をしていきます。

----
本ドキュメントは [http://creativecommons.org/licenses/by/3.0/deed.ja Creative Commons Attribution License, Version 3] に基づいて和訳・編集し、公開しています。
原著作者表示：[http://www.appcelerator.com/ Appcelerator, Inc]