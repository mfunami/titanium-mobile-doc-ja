#summary Native UI案内 - アニメーション(進捗度50%)
#labels api,underconstruction
= Native UI案内 - アニメーション =
Window, View, Controlなどの各オブジェクトには{{{animate}}}という関数が用意されており、対象となるオブジェクトに対するアニメーション描画を行うことができます。

その際に引き渡される引数が{{{Titanium.UI.Animation}}}オブジェクトになり、次のような多くのパラメータとなるプロパティを持っています。

|| *名前* || *型* || *説明* ||
||autoreverse||boolean||アニメーション完了後に元に戻るかどうかを指定||
||backgroundColor||string||色アニメーション：背景色||
||bottom||float||移動アニメーション：bottom位置||
||center||object||移動アニメーション：対象オブジェクトの中心座標||
||color||string||色アニメーション：表示色||
||curve||int||変形アニメーション：曲線の状態を指定。Ti.UI.ANIMATION_CURVE_EASE_IN, Ti.UI.ANIMATION_CURVE_EASE_IN_OUT, Ti.UI.ANIMATION_CURVE_EASE_OUT, Ti.UI.ANIMATION_CURVE_LINEAR||
||delay||float||開始まで遅延時間（単位：ミリ秒）||
||duration||float||アニメーションに掛ける時を（単位：ミリ秒）||
||height||float||変形アニメーション：高さ||
||left||float||変形アニメーション：left位置||
||opacity||float||色アニメーション：透過度||
||opaque||boolean||色アニメーション：透過・非透過の切替アニメーション||
||repeat||int||アニメーション回数||
||right||float||変形アニメーション：right位置||
||top||float||変形アニメーション：top位置||
||transform||object||2DMatrix, 3DMatrixの値を設定し、変形アニメーション指定をする||
||transition||int||during a transition animation, this is the constant to the type of transition to use||
||visible||boolean||表示・非表示の切替アニメーション||
||width||float||変形アニメーション：幅||
||zIndex||int||移動アニメーション：zIndex||

例えば次のようなコードが例ですが、もともと赤い背景色が1000ms(1秒)かけて黒にフェイドしていき、その後、さらに1秒かけてオレンジ色に変化していくというものになります。

{{{
var view = Titanium.UI.createView({
   backgroundColor:'red'
});
// イベントリスナに登録するため、変数化している。
// 実際にはJSON形式で渡す省略記法もある（後述）
var animation = Titanium.UI.createAnimation();
animation.backgroundColor = 'black';
animation.duration = 1000;
animation.addEventListener('complete',function(){
    animation.removeEventListener('complete',this);
    animation.backgroundColor = 'orange';
    view.animate(animation);
});
// Viewに対してアニメーションを指示している。
view.animate(animation);
}}}

またanimateにはAnimationオブジェクトに続いて、完了後のコールバック関数も引数にすることができます。

次の例は4段階にアニメーションが変化していくというものです。

{{{
// 枠線によって円形にしているViewを配置し、
// これに対するアニメーションを指示する、というものです。
var circle = Titanium.UI.createView({
	height:100,
	width:100,
	borderRadius:50,
	backgroundColor:'#336699',
	top:10
});

//
// ここではTitanium.UI.Animationではなく、JSON形式で直接指示している。
//
// STEP 1. 中心座標(100, 100)に移動
circle.animate({center:{x:100,y:100},curve:Ti.UI.ANIMATION_CURVE_EASE_IN_OUT,duration:1000}, function(){
    // STEP 2. 中心座標(0, 200)に移動
    circle.animate({center:{x:0,y:200},duration:1000}, function(){
        // STEP 3. 中心座標(300, 300)に移動
        circle.animate({center:{x:300,y:300},duration:1000},function(){
            // STEP 4. 元の位置である中心座標(150, 60)に戻る
            circle.animate({center:{x:150,y:60, duration:1000}});
        });
    })
});
}}}

== transitionアニメーション ==

(現在作成中...)


== 2DMatrix, 3DMatrixによる変形アニメーション ==

(現在作成中...)

{{{
var t = Ti.UI.create2DMatrix();
t.a = 1;
t.b = 2;
t.c = 3;
t.d = 4;

// pass inline animation objects and get callback when done
circle.animate({
    opacity:0,
    transform:t,
    duration:500
}, function(){
    var t = Ti.UI.create2DMatrix();
    circle.animate({opacity:1, transform:t, duration:500})
});
}}}


{{{
var button = Titanium.UI.createButton({
    title:'Animate Me', 
    width:300,
    height:40,
    top:10
});
button.addEventListener('click', function(){
    var t = Titanium.UI.create3DMatrix();
    t = t.rotate(200,0,1,1);
    t = t.scale(3);
    t = t.translate(20,50,170);
    t.m34 = 1.0/-2000;
    button.animate({
        transform:t,
        duration:1000,
        autoreverse:true
    });
});
}}}


https://developer.appcelerator.com/apidoc/mobile/1.0/Titanium.UI.Animation

----
本ドキュメントは [http://creativecommons.org/licenses/by/3.0/deed.ja Creative Commons Attribution License, Version 3] に基づいて和訳・編集し、公開しています。

原著作者表示：[http://www.appcelerator.com/ Appcelerator, Inc]