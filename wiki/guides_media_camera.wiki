#summary APIカタログ(メディア編) - カメラ撮影・カメラロール・スクリーンショット
#labels api,media,camera
= APIカタログ(メディア編) - カメラ撮影・カメラロール・スクリーンショット =

== カメラ撮影 ==
{{{
btnCamera.addEventListener('click', function(){
    Titanium.Media.showCamera({
        // JSON形式の引数です
        success:function(event)
        {
            // 成功時の関数にはイメージデータのオブジェクトや詳細情報が引き渡されます。
            // ここでプレビューしたり、アップロードしたり（そのためのキューに貯めるとか）
            // する感じです。

            // cropRectにはx,y,height,widthといったデータがはいる。
            var cropRect = event.cropRect;
            var image = event.media;
            var thumbnail = event.thumbnail;
		
            // 撮影データを表示する
            var imageView = Ti.UI.createImageView({image:event.media});
            Ti.UI.currentWindow.add(imageView);

            
        },
        cancel:function()
        {
            //
        },
        error:function(error)
        {
            // errorとしてカメラがデバイスにないようなケース(iPod touchなどがそうでしょうか)では
            // error.code が Titanium.Media.NO_CAMERA として返るようです。
        },
        allowImageEditing:true
    });
});
}}}

== カメラロール側から写真選択 ==
{{{
Titanium.Media.openPhotoGallery({
    success: function(event) {
        // カメラロールで写真を選択した時の挙動(カメラと同様)
    },
    error: function(error) {
        // notify(e.message);
    },
    cancel: function() {
        // キャンセル時の挙動
    },
    allowImageEditing: true
});
}}}

== スクリーンショットの取得 ==
使いどころが難しいのですが、デバイス画面をカメラ同様に取得することができます。
{{{
Titanium.Media.takeScreenshot(function(event){
    var image = event.media;
    var imageView = Ti.UI.createImageView({image:event.media});
    Ti.UI.currentWindow.add(imageView);
});
}}}

== 関連するAPIドキュメント ==
 * https://developer.appcelerator.com/apidoc/mobile/1.0/Titanium.Media

----
原著作者表示：[http://www.appcelerator.com/ Appcelerator, Inc]