#summary APIカタログ(メディア編) - カメラ撮影・フォトギャラリーからの取得・スクリーンショット
#labels api,media,camera
= APIカタログ(メディア編) - カメラ撮影・フォトギャラリーからの取得・スクリーンショット =
カメラでの撮影、フォトギャラリーからのデータ取得はいずれも非同期に行われるため、コールバック関数によって取得するかたちになります。そこで引き渡される画像・サムネイルのデータ、補助情報を利用し、プレビューしたりアップロードしたりします。

ちなみに allowImageEditing プロパティをtrueと指定した場合は拡大や移動をするための画面を一段挟み、その結果がsuccuessプロパティで呼び出される関数に引き渡されます。

== カメラ撮影 ==
{{{
btnCamera.addEventListener('click', function(){
    Titanium.Media.showCamera({
        // JSON形式の引数です
        success:function(event){
            // cropRectにはx,y,height,widthといったデータがはいる。
            var cropRect = event.cropRect;
            // 画像イメージ(Blobデータ)が返される
            var image = event.media;
            // サムネイルイメージ(Blobデータ)が返される
            var thumbnail = event.thumbnail;
		
            // 撮影データを表示する
            var imageView = Ti.UI.createImageView({image:event.media});
            Ti.UI.currentWindow.add(imageView);
        },
        cancel:function(){
            //
        },
        error:function(error){
            // errorとしてカメラがデバイスにないようなケース(iPod touchなどがそうでしょうか)では
            // error.code が Titanium.Media.NO_CAMERA として返ります。
        },
        allowImageEditing:true,
        saveToPhotoGallery: false
    });
});
}}}

撮影成功時に本体フォトギャラリーに画像を保存するだけの場合は、showCameraの引数として saveToPhotoGallery を trueとして設定するだけです。

ファイルへの書き出しをする場合、succuess内で次のように出力処理を記述します。
{{{
// アプリケーションデータディレクトリに camera_photo.png として出力する。
var f = Titanium.Filesystem.getFile(Titanium.Filesystem.applicationDataDirectory, 'camera_photo.png');
f.write(event.media);

// 現在のウィンドウ背景画像としてそのまま使う場合は次のようにする
Titanium.UI.currentWindow.backgroundImage = f.nativePath;
}}}

== フォトギャラリー側から写真選択 ==
撮影済みのデータから処理対象を選択する場合、次のように記述します。

結果がevent.mediaとして返ってくるので、それをアップロードしたりする感じになります。

{{{
Titanium.Media.openPhotoGallery({
    success: function(event) {
        // カメラロールで写真を選択した時の挙動(カメラと同様)
    },
    error: function(error) {
        // notify(e.message);
    },
    cancel: function() {
        // キャンセル時の挙動
    },
    allowImageEditing: true
});
}}}

== スクリーンショットの取得 ==
使いどころが難しいのですが、デバイス画面をカメラ同様に取得することができます。

{{{
Titanium.Media.takeScreenshot(function(event){
    var image = event.media;
    var imageView = Ti.UI.createImageView({image:event.media});
    Ti.UI.currentWindow.add(imageView);
});
}}}

== 関連するAPIドキュメント ==
 * https://developer.appcelerator.com/apidoc/mobile/1.0/Titanium.Media

----
原著作者表示：[http://www.appcelerator.com/ Appcelerator, Inc]